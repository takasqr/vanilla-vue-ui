// Replace vue3 with vue if you are using Storybook for Vue 2
import type { Meta, StoryObj } from '@storybook/vue3';
import { ref, watchEffect } from "vue"
import Select from './WSelect.vue';
import type { SelectOption } from './SelectOption';

type SelectProps = InstanceType<typeof Select>['$props']

const meta: Meta<typeof Select> = {
  component: Select,
};

export default meta;
type Story = StoryObj<typeof Select>;

const selectOption: SelectOption[] = [
  { key: 'milk', name: '„Éü„É´„ÇØ' },
  { key: 'orange', name: '„Ç™„É¨„É≥„Ç∏„Ç∏„É•„Éº„Çπ' },
  { key: 'coffee', name: '„Ç≥„Éº„Éí„Éº' }
]

const selected: SelectOption = { key: 'coffee', name: '„Ç≥„Éº„Éí„Éº' }

/*
 *üëá Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/api/csf
 * to learn how to use render functions.
 */
 export const Primary: Story = {
  render: (args: SelectProps) => ({
    setup() {
      // `selected`„ÇíÁõ¥Êé•‰Ωø„ÅÜ„ÅÆ„Åß„ÅØ„Å™„Åè„ÄÅ`modelValue`„ÇíÁµåÁî±„Åó„Å¶ÂàùÊúüÂÄ§„ÇíË®≠ÂÆö
      const modelValue = ref(args.modelValue);
      
      // `update:modelValue`„Ç§„Éô„É≥„Éà„Çí„É™„ÉÉ„Çπ„É≥„Åó„Å¶„ÄÅÂÜÖÈÉ®Áä∂ÊÖã„ÇíÊõ¥Êñ∞
      watchEffect(() => {
        modelValue.value = args.modelValue;
      });

      return {
        ...args,
        modelValue,
        updateModelValue: (newValue: SelectOption) => {
          modelValue.value = newValue;
        },
      };
    },
    components: { Select },
    template: '<Select :options="options" :title="title" v-model="modelValue"></Select>',
  }),
  args: {
    title: 'È£≤„ÅøÁâ©',
    options: selectOption,
    modelValue: selected, // `selected`„Åß„ÅØ„Å™„Åè„ÄÅ`modelValue`„Å®„Åó„Å¶ÊåáÂÆö
  },
};